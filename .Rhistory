library(tmap)
install.packages("tmap")
library(tmap)
tm_shape(nz)
2+2
tm_shape(nz)
library(tmap)
install.packages("tmap")
installed.packages()
tmap in installed.packages()
"tmap" in installed.packages()
View(installed.packages())
installed.packages()
install.packages("map")
install.packages("maps")
library(maps)
install.packages("tmap")
library(shiny)
library(tmap)
tm_shape(nz)
2+2
setwd("C:\Users\Usuario\Documents\AdmiInfo")
setwd("C:\Users\Usuario\Documents\AdmiInfo")
setwd(r"C:\Users\Usuario\Documents\AdmiInfo")
setwd('C:\Users\Usuario\Documents\AdmiInfo')
library(lubridate)
install.packages("lubridate")
hydro <- read.csv("hydro.csv")
hydro <- read.csv("Hydro.csv")
source('~/AdmiInfo/Hydro.R')
hydro <- read.csv("Hydro.csv")
library(lubridate)
hydro <- read.csv("Hydro.csv")
setwd("C:/Users/Usuario/Documents/AdmiInfo/")
hydro <- read.csv("Hydro.csv")
View(hydro)
hydro$Date <- as.Date(dmy(hydro$Date))
View(hydro)
hydro <- read.csv("Hydro.csv")
hydro$Date <- as.Date(dmy(hydro$Date))
unique(diff(hydro$Date))
diff(hydro$Date)
sum(hydro$storage < 235)
hydro$storage < 235
sum(hydro$storage < 235)
subset(hydro$storage < 235)
subset(hydro$storage < 235,FALSE)
subset(hydro$storage < 235,TRUE)
subset(hydro,storage < 235)
hydrolow=subset(hydro,storage < 235)
diff(hydrolow$Date)
diff(hydrolow$Date) > 7
sum(diff(hydrolow$Date) > 7)
hydro <- read.csv("Hydro.csv")
View(hydro)
hydro$Date <- as.Date(dmy(hydro$Date))
unique(diff(hydro$Date))
sum(hydro$storage < 235)
hydrolow=subset(hydro,storage < 235)
sum(diff(hydrolow$Date) > 7)
sum(diff(hydrolow$Date) > 7)+1
hydro$storageBinary <- ifelse(hydro$storage< 235,0,1)
diff(hydro$storageBinary)
difs <- diff(hydro$storageBinary)
sum(difs == -1)
ploter <- read.csv("plot.csv")
View(ploter)
ploter$Date = as.Date(dmy(ploter$Date))
View(ploter)
View(ploter)
ploter <- read.csv("plot.csv")
View(ploter)
ploter$Date = as.Date(mdy(ploter$Date))
install.packages("Hmisc")
na.action("na.delete")
na.action()
library(Hmisc)
describe(runif(200),dig=2)
describe(runif(200),dig=2)
describe(runif(2000),dig=2)
describe(runif(200000),dig=2)
describe(runif(200000),dig=2)
describe(runif(200000),dig=2)
summary(ploter)
na.action("na.keep")
ploter$Date = as.Date(mdy(ploter$Date))
ploter <- read.csv("plot.csv")
View(ploter)
na.action("na.keep")
ploter$Date = as.Date(mdy(ploter$Date))
summary(ploter)
sum(ploter$diameter == NA)
sum(ploter$diameter == is.na)
sum(is.na(ploter$diameter))
sum(is.na(ploter$diameter))
levels(ploter)
levels(ploter$diameter)
levels(ploter$treat)
View(ploter)
nlevels(ploter$treat)
table(ploter$treat)
table(ploter$treat,useNA = FALSE) #Sirve para contar por niveles
table(ploter$treat,useNA = 0) #Sirve para contar por niveles
?table
table(ploter$treat,useNA == "no") #Sirve para contar por niveles
table(ploter$treat,exclude = if (useNA == "no")) #Sirve para contar por niveles
table(ploter$treat,exclude = if (useNA == "no")) #Sirve para contar por niveles
table(ploter$treat,exclude = if(useNA == "no")) #Sirve para contar por niveles
table(ploter$treat,exclude = NA) #Sirve para contar por niveles
table(ploter$treat,exclude = NULL) #Sirve para contar por niveles
ploter$NATreat = ifelse(is.na(ploter$diameter),NA,ploter$treat)
table(ploter$treat) #Sirve para contar por niveles
table(ploter$NATreat) #Sirve para contar por niveles
ploter$NATreat = ifelse(is.na(ploter$diameter),NA,as.character(ploter$treat))
table(ploter$NATreat) #Sirve para contar por niveles
ifelse(is.na(ploter$diameter),NA,as.Date(ploter$Date))
ifelse(is.na(ploter$diameter),NA,ploter$Date)
ddays(14123)
as.Date(ddays(14123))
as.Date(ddays(ploter$Date))
as.Date(days(ploter$Date))
as.Date(14153)
as.Date(14153,origin = 0)
as.Date.numeric(origin = 0,14153)
as.Date.numeric(0,14153)
as.Date(ploter$Date)
ploter$Date
as.Date()
as.Date(0)
ifelse(is.na(ploter$diameter),NA,ploter$Date)
subset(ploter,is.na(diameter))
t = subset(ploter,is.na(diameter))
table(t)
table(t$Date)
unique(t$Date)
grep(ploter)
grep(ploter$treat)
?grep
